openapi: "3.0.0"
info:
  version: 1.0.0
  title:  API server
paths:
  /products/v1:
    get:
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                required:
                  - products
                properties:
                  products:
                    type: array
                    items: 
                      $ref: '#/components/schemas/ProductItem'

  /product-by-id/v1:
    get:
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - product
                properties:
                  product:
                      $ref: '#/components/schemas/ProductItem'
        '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '404':
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /login/v1:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - token
                  properties:
                    token:
                      type: string
                      description: jwt token for further auth
        '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

  /register/v1:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        '200':
            description: OK
        '409':
            description: Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  
  /make-order/v1:
    post:
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
               - product_ids
              properties:
                product_ids:
                  type: array
                  items:
                    type: integer
                  minItems: 1
      responses:
        '200':
            description: OK
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '409':
            description: Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ProductItem:
      type: object
      required:
        - id
        - name
        - price
        - left_in_stock
        - provider_id
        - category
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        left_in_stock:
          type: integer
        provider_id:
          type: integer
        category:
          type: string
  
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
    
    UserInfo:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
